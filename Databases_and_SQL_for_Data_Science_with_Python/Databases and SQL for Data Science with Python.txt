Databases and SQL for Data Science with Python

1. Basic SQL
    1.1 Learning purpose
        - Basics of SQL, Relational Database Model
        - SQL, data, database, relational database
    1.2 Basic terms
        1.2.1 SQL (Structured Query Language): A language used for relational databses
        1.2.2 data: Facts (words, numbers), Pictures
        1.2.3 database: A repository of data, Provides the functionality for adding, modifying and querying that data
        1.2.4 Relational Databse: Data stored in tabular form (columns and rows)
        1.2.5 Database: repository of data
        1.2.6 DBMS (Database Management System): software to manage databases
        1.2.7 RDBMS (Relational database management system): A set of software tools that controls the data (access, organization, and storage)
     1.3 Basic SQL commands
         - Create a table, Insert, Select, Update, Delete
         1.3.1 SELECT
             - The general syntax of SELECT statments is: select COLUMN1, COLUMN2, ... from TABLE1 ;
             - To retrieve all columns from the COUNTRY table we could use "*" instead of specifying individual column names: select * from COUNTRY ;
             - The WHERE clause can be added to your query to filter results or get specific rows of data. 
             - To retrieve data for all rows in the COUNTRY table where the ID is less than 5: select * from COUNTRY where ID < 5 ;
             - In case of character based columns the values of the predicates in the where clause need to be enclosed in single quotes. 
             - To retrieve the data for the country with country code "CA" we would issue: select * from COUNTRY where CCODE = 'CA';
            1.3.1.1 Select statement with COUNT
                - COUNT() is a built-in function that retrieves the number of rows matching the query criteria
                - ex. select COUNT(*) from tablename
                - ex. select COUNT(COUNTRY) from MEDALS where COUNTRY='CANADA'
            1.3.1.2 Select statement with DISTINCT
                - DISTINCT is used to remove duplicate values from a result set
                - ex. select DISTINCT columnname from tablename
                - ex. select DISTINCT COUNTRY from MEDALS where MEDALTYPE = 'GOLD'
            1.3.1.3 Select statement with LIMIT
                - LIMIT is used for restricting the number of rows retrieved from the database
                - ex. select * from tablename LIMIT 10
                - ex. select * from MEDALS where YEAR = 2018 LIMIT 5
         1.3.2 INSERT
             - A Data Manipulation Language (DML) statement used to read and modify data
             - The general syntax of INSERT statement is: INSERT INTO [TableName] <([ColumnName], ...)> VALUES ([Value], ...)
             - ex. INSERT INTO AUTHOR (AUTHOR_ID, LASTNAME, FIRSTNAME, EMAIL, CITY, COUNTRY) VALUES ('A1', 'Chong', 'Raul', 'rfc@ibm.com', 'Toronto', 'CA')
         1.3.3 UPDATE
             - A Data Manipulation Language (DML) statement used to read and modify data
             - The general syntax of UPDATE statement is: UPDATE [TableName] SET [[ColumnName]=[Value]] <WHERE [Condition]>
             - ex. UPDATE AUTHOR SET LASTNAME='KATTA' FIRSTNAME='LAKSHMI' WHERE AUTHOR_ID='A2'
         1.3.4 DELETE
             - A Data Manipulation Language (DML) statement used to read and modify data
             - The general syntax of DELETE statement is: DELETE [TableName] SET [[ColumnName]=[Value]] <WHERE [Condition]>
             - ex. DELETE FROM AUTHOR WHERE AUTHOR_ID IN ('A2','A3')